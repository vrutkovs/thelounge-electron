---

root: true

env:
  es6: true
  browser: true
  mocha: true
  node: true

rules:
  arrow-body-style: error
  arrow-parens: [error, always]
  arrow-spacing: error
  block-scoped-var: error
  block-spacing: [error, always]
  brace-style: [error, 1tbs]
  comma-dangle:
    - error
    - always-multiline
  curly: [error, all]
  dot-location: [error, property]
  dot-notation: error
  eol-last: error
  eqeqeq: error
  handle-callback-err: error
  indent: [error, tab]
  key-spacing: [error, {beforeColon: false, afterColon: true}]
  keyword-spacing: [error, {before: true, after: true}]
  linebreak-style: [error, unix]
  no-alert: error
  no-catch-shadow: error
  no-confusing-arrow: error
  no-control-regex: off
  no-duplicate-imports: error
  no-else-return: error
  no-implicit-globals: error
  no-multi-spaces: error
  no-multiple-empty-lines: [error, { "max": 1 }]
  no-shadow: error
  no-template-curly-in-string: error
  no-trailing-spaces: error
  no-unsafe-negation: error
  no-useless-computed-key: error
  no-useless-return: error
  no-use-before-define: [error, {functions: false}]
  object-curly-spacing: [error, never]
  padded-blocks: [error, never]
  prefer-const: error
  quote-props: [error, as-needed]
  quotes: [error, double, avoid-escape]
  semi-spacing: error
  semi-style: [error, last]
  semi: [error, always]
  space-before-blocks: error
  space-before-function-paren:
    - error
    - anonymous: never
      named: never
      asyncArrow: always # Otherwise requires `async()`
  space-in-parens: [error, never]
  space-infix-ops: error
  spaced-comment: [error, always]
  strict: error
  template-curly-spacing: error
  yoda: error

globals:
  log: false

extends: eslint:recommended
